{"uid":"24f7ef5aaa6e1bdc","name":"Create a tag under repo","fullName":"tests.test_tag#test_create_tag_under_repo","historyId":"8ec1222f5e3cf07f7fe697da8965089e","time":{"start":1752042013261,"stop":1752042016828,"duration":3567},"status":"failed","statusMessage":"AssertionError: [{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\n  ', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}]\nassert 1 == 0\n +  where 1 = len([{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\\n', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}])","statusTrace":"config = GitCodeConfig(base_url='https://api.gitcode.com/api/v5', owner='chaocw', access_token='nhmXJzPdUsy_ECyvRD2aABqB')\nrepo = '1752042007976'\n\n    @allure.suite(\"Tag\")\n    @allure.label(\"owner\", \"chaocw\")\n    @allure.tag(\"API\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Create a tag under repo\")\n    def test_create_tag_under_repo(config, repo):\n        tag = TagAPI(config)\n        data = Tag(tag_name=\"v1.0.0\", tag_message=\"version 1.0\")\n        params = TagPathParams(config.owner, repo)\n        with allure.step(\"list tags ensure non-existing current tag\"):\n            response = tag.list_repo_tags(params)\n            if len(response) > 0:\n                for item in response:\n                    assert data.tag_name != item.get(\"name\"), item\n        with allure.step(\"create tag under repo\"):\n            response = tag.create_repo_tag(params, data)\n            assert response.get(\"name\") == data.tag_name, response\n        with allure.step(\"check tag name and message\"):\n            response = tag.list_repo_tags(params)\n>           assert len(response) == 0, response\nE           AssertionError: [{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\nE             ', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}]\nE           assert 1 == 0\nE            +  where 1 = len([{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\\n', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}])\n\ntests/test_tag.py:25: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1752042007976,"stop":1752042007976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Prepare for the test basic repo","time":{"start":1752042007976,"stop":1752042013260,"duration":5284},"status":"passed","steps":[{"name":"ensure repo is non-existing","time":{"start":1752042007977,"stop":1752042009462,"duration":1485},"status":"passed","steps":[{"name":"Get a user's repository","time":{"start":1752042007977,"stop":1752042009461,"duration":1484},"status":"passed","steps":[],"attachments":[{"uid":"8efe998651b64af9","name":"[GET] https://api.gitcode.com/api/v5/repos/chaocw/1752042007976","source":"8efe998651b64af9.json","type":"application/json","size":337}],"parameters":[{"name":"params","value":"RepoPathParams(owner='chaocw', repo='1752042007976')"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true},{"name":"create a repo by timestamp","time":{"start":1752042009462,"stop":1752042013260,"duration":3798},"status":"passed","steps":[{"name":"Create a personal project repository","time":{"start":1752042009462,"stop":1752042013260,"duration":3798},"status":"passed","steps":[],"attachments":[{"uid":"c2bccd2eaac051a","name":"[POST] https://api.gitcode.com/api/v5/user/repos","source":"c2bccd2eaac051a.json","type":"application/json","size":963}],"parameters":[{"name":"data","value":"Repo(name='1752042007976', gitignore_template='JavaScript', license_template='MulanPSL-2.0')"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":2,"hasContent":true}],"testStage":{"status":"failed","statusMessage":"AssertionError: [{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\n  ', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}]\nassert 1 == 0\n +  where 1 = len([{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\\n', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}])","statusTrace":"config = GitCodeConfig(base_url='https://api.gitcode.com/api/v5', owner='chaocw', access_token='nhmXJzPdUsy_ECyvRD2aABqB')\nrepo = '1752042007976'\n\n    @allure.suite(\"Tag\")\n    @allure.label(\"owner\", \"chaocw\")\n    @allure.tag(\"API\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Create a tag under repo\")\n    def test_create_tag_under_repo(config, repo):\n        tag = TagAPI(config)\n        data = Tag(tag_name=\"v1.0.0\", tag_message=\"version 1.0\")\n        params = TagPathParams(config.owner, repo)\n        with allure.step(\"list tags ensure non-existing current tag\"):\n            response = tag.list_repo_tags(params)\n            if len(response) > 0:\n                for item in response:\n                    assert data.tag_name != item.get(\"name\"), item\n        with allure.step(\"create tag under repo\"):\n            response = tag.create_repo_tag(params, data)\n            assert response.get(\"name\") == data.tag_name, response\n        with allure.step(\"check tag name and message\"):\n            response = tag.list_repo_tags(params)\n>           assert len(response) == 0, response\nE           AssertionError: [{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\nE             ', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}]\nE           assert 1 == 0\nE            +  where 1 = len([{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\\n', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}])\n\ntests/test_tag.py:25: AssertionError","steps":[{"name":"list tags ensure non-existing current tag","time":{"start":1752042013261,"stop":1752042014738,"duration":1477},"status":"passed","steps":[{"name":"List all tags for repo","time":{"start":1752042013261,"stop":1752042014738,"duration":1477},"status":"passed","steps":[],"attachments":[{"uid":"2e637ea4a95a7caa","name":"[GET] https://api.gitcode.com/api/v5/repos/chaocw/1752042007976/tags","source":"2e637ea4a95a7caa.json","type":"application/json","size":150}],"parameters":[{"name":"params","value":"TagPathParams(owner='chaocw', repo='1752042007976', tag_name='')"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true},{"name":"create tag under repo","time":{"start":1752042014738,"stop":1752042016378,"duration":1640},"status":"passed","steps":[{"name":"Create a personal project repository","time":{"start":1752042014738,"stop":1752042016378,"duration":1640},"status":"passed","steps":[],"attachments":[{"uid":"133ce7b82eb2b955","name":"[POST] https://api.gitcode.com/api/v5/repos/chaocw/1752042007976/tags","source":"133ce7b82eb2b955.json","type":"application/json","size":453}],"parameters":[{"name":"params","value":"TagPathParams(owner='chaocw', repo='1752042007976', tag_name='')"},{"name":"data","value":"Tag(tag_name='v1.0.0', tag_message='version 1.0', refs='main')"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true},{"name":"check tag name and message","time":{"start":1752042016378,"stop":1752042016828,"duration":450},"status":"failed","statusMessage":"AssertionError: [{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\n  ', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}]\nassert 1 == 0\n +  where 1 = len([{'commit': {'date': '2025-07-09T06:20:12.000Z', 'sha': '9e80d881eb575e83974335ffaac9137c976ce940'}, 'message': 'version 1.0\\n', 'name': 'v1.0.0', 'tagger': {'date': '2025-07-09T06:20:12.000Z', 'email': 'chaoc.w@outlook.com', 'name': 'chaocw'}}])\n","statusTrace":"  File \"/home/runner/work/pytest-template/pytest-template/tests/test_tag.py\", line 25, in test_create_tag_under_repo\n    assert len(response) == 0, response\n","steps":[{"name":"List all tags for repo","time":{"start":1752042016378,"stop":1752042016827,"duration":449},"status":"passed","steps":[],"attachments":[{"uid":"c5078567b04b4df0","name":"[GET] https://api.gitcode.com/api/v5/repos/chaocw/1752042007976/tags","source":"c5078567b04b4df0.json","type":"application/json","size":573}],"parameters":[{"name":"params","value":"TagPathParams(owner='chaocw', repo='1752042007976', tag_name='')"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[{"uid":"d7ae1dccad487c37","name":"stderr","source":"d7ae1dccad487c37.txt","type":"text/plain","size":1364}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":4,"hasContent":true},"afterStages":[{"name":"Prepare for the test basic repo::0","time":{"start":1752042016831,"stop":1752042018581,"duration":1750},"status":"passed","steps":[{"name":"ensure repo is existing","time":{"start":1752042016831,"stop":1752042017911,"duration":1080},"status":"passed","steps":[{"name":"Get a user's repository","time":{"start":1752042016831,"stop":1752042017911,"duration":1080},"status":"passed","steps":[],"attachments":[{"uid":"28fb25c6a19002c9","name":"[GET] https://api.gitcode.com/api/v5/repos/chaocw/1752042007976","source":"28fb25c6a19002c9.json","type":"application/json","size":2898}],"parameters":[{"name":"params","value":"RepoPathParams(owner='chaocw', repo='1752042007976')"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true},{"name":"delete a repo by timestamp","time":{"start":1752042017911,"stop":1752042018581,"duration":670},"status":"passed","steps":[{"name":"Delete a repository","time":{"start":1752042017911,"stop":1752042018581,"duration":670},"status":"passed","steps":[],"attachments":[{"uid":"c82830080d39f67e","name":"[DELETE] https://api.gitcode.com/api/v5/repos/chaocw/1752042007976","source":"c82830080d39f67e.json","type":"application/json","size":148}],"parameters":[{"name":"params","value":"RepoPathParams(owner='chaocw', repo='1752042007976')"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":2,"hasContent":true}],"labels":[{"name":"tag","value":"API"},{"name":"owner","value":"chaocw"},{"name":"severity","value":"critical"},{"name":"suite","value":"Tag"},{"name":"parentSuite","value":"tests"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2379-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_tag"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","owner":"chaocw","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":2,"skipped":0,"passed":2,"unknown":0,"total":6},"items":[{"uid":"3fceca2eac8915b2","reportUrl":"https://chaocwu.github.io/pytest-template/14//#testresult/3fceca2eac8915b2","status":"passed","time":{"start":1751890767503,"stop":1751890771101,"duration":3598}},{"uid":"5d08a10e872b3b60","reportUrl":"https://chaocwu.github.io/pytest-template/13//#testresult/5d08a10e872b3b60","status":"passed","time":{"start":1751890600201,"stop":1751890604159,"duration":3958}},{"uid":"630a9dfcae73773a","reportUrl":"https://chaocwu.github.io/pytest-template/12//#testresult/630a9dfcae73773a","status":"failed","statusDetails":"AssertionError: environment variables must be set.\nassert ('https://api.gitcode.com/api/v5' and 'chaocw' and '')","time":{"start":1751889721354,"stop":1751889721354,"duration":0}},{"uid":"8480201219f2ee80","reportUrl":"https://chaocwu.github.io/pytest-template/11//#testresult/8480201219f2ee80","status":"broken","statusDetails":"ValueError: must be set environment variables.","time":{"start":1751889562885,"stop":1751889562885,"duration":0}},{"uid":"dd3cc6ee3a64b87b","reportUrl":"https://chaocwu.github.io/pytest-template/10//#testresult/dd3cc6ee3a64b87b","status":"broken","statusDetails":"ValueError: must be set environment variables.","time":{"start":1751888105100,"stop":1751888105100,"duration":0}}]},"tags":["API"]},"source":"24f7ef5aaa6e1bdc.json","parameterValues":[]}